apiVersion: v1
kind: Namespace
metadata:
  name: httpd
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: root-ca-issuer
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: root-ca-cert
spec:
  isCA: true
  commonName: root-ca-cert
  subject:
    organizations:
      - Kind Cluster Inc.
    organizationalUnits:
      - Kind
  secretName: root-ca-cert-secret
  dnsNames:
    - "*.cluster.local"
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: root-ca-issuer
    kind: ClusterIssuer
    group: cert-manager.io
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: ca-issuer
spec:
  ca:
    secretName: root-ca-cert-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-db-reader
  namespace: httpd
---
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: vault-db-reader
  namespace: httpd
  annotations:
    kubernetes.io/service-account.name: vault-db-reader
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd-deployment
  namespace: httpd
  labels:
    app: httpd-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd-app
  template:
    metadata:
      labels:
        app: httpd-app
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "vault-db-reader"
        vault.hashicorp.com/agent-inject-secret-database-config: "internal/data/database/config"
        vault.hashicorp.com/agent-inject-template-database-config: |
          {{ with secret "internal/data/database/config" -}}
          export POSTGRES_USER="{{ .Data.data.username }}"
          export POSTGRES_PASS="{{ .Data.data.password }}"
          {{- end }}
    spec:
      serviceAccountName: vault-db-reader
      restartPolicy: Always
      containers:
        - name: httpd
          image: httpd:latest
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - |
                    . /vault/secrets/database-config
                    echo """
                      <html>
                        <h1>It works!</h1>
                        <p>Hostname: $HOSTNAME</p>
                        <p>Env: $ENVIRONMENT</p>
                        <p>User: $POSTGRES_USER</p>
                        <p>Pass: $POSTGRES_PASS</p>
                      </html>
                    """ > htdocs/index.html
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: ENVIRONMENT
              value: "development"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: httpd-service
  namespace: httpd
spec:
  selector:
    app: httpd-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpd-ingress
  namespace: httpd
  annotations:
    # kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: ca-issuer
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - kind.cluster.local
      secretName: kind-cluster-local-tls
  rules:
    - host: kind.cluster.local
      http:
        paths:
          - backend:
              service:
                name: httpd-service
                port:
                  number: 8080
            path: /httpd
            pathType: Prefix
